<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage />
	<TimerPackage />
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>utility</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>help me</name>
				<script>send('crt Requesting assistance at '..gmcp.Room.Info.num..' in '..gmcp.Room.Info.area..'!')-- you wimp</script>
				<command></command>
				<packageName></packageName>
				<regex>^helpme$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>my location</name>
				<script>send("crt I'm at \'"..gmcp.Room.Info.name.."\' vnum \'"..gmcp.Room.Info.num..'\' in ' ..gmcp.Room.Info.area..".")</script>
				<command></command>
				<packageName></packageName>
				<regex>^myloc$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>xenoScan</name>
				<script>send("xenozoology scan "..matches[2])</script>
				<command></command>
				<packageName></packageName>
				<regex>^xs (.+)</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mcolors</name>
				<script>wrap = 0
for i,v in pairs(color_table) do
   if string.find(i,'%u') == nil then
      fg(i)
      echo (i .. string.rep(" ",22-string.len(i)))
      resetFormat()
      if wrap == 5 then 
         wrap = 0
         echo("\n")
      else 
         wrap = wrap + 1 
      end
   end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>mcolors</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^wwr</name>
				<script>sym.hunter.send('CLEARQUEUE')
send ('wetwiring regenerate')
</script>
				<command></command>
				<packageName></packageName>
				<regex>^wwr</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>flight</name>
				<script>local class = gmcp.Char.Status.class
if class == 'Nanoseer' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('void levitate'.. matches[2])
elseif class == 'Engineer' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('operate hoverboard'.. matches[2])
elseif class == 'B.E.A.S.T.' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('fire jumpjets'.. matches[2])
elseif class == 'Scoundrel' then
    sym.hunter.send('CLEARQUEUE')
    sym.hunter.send('fly'.. matches[2])
elseif class == 'Fury' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('kith flight'.. matches[2])
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^fly(.+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>expanded honors</name>
				<script>send('honors '..matches[2])
wait(1)

local body = ""
local person = matches[2]
local url = "https://starmourn.com/api/characters/"..person..".json"
local header = {["Content-Type"] = "application/json"}

function onHttpGetDone(_, url, body)
  killAnonymousEventHandler(handlerId)
  thisInfo = yajl.to_value(body)
  cecho("&lt;LightSkyBlue&gt;Age: &lt;WhiteSmoke&gt;"..thisInfo.age.."&lt;LightSkyBlue&gt; Class: &lt;WhiteSmoke&gt;"..thisInfo.class.."&lt;LightSkyBlue&gt; Level: &lt;WhiteSmoke&gt;"..thisInfo.level.."&lt;LightSkyBlue&gt; Captaincy: &lt;WhiteSmoke&gt;"..thisInfo.captaincy.."\n")
end

handlerId = registerAnonymousEventHandler("sysGetHttpDone", onHttpGetDone)

getHTTP(url, header)</script>
				<command></command>
				<packageName></packageName>
				<regex>^honors (\w+)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>hunter</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>runner</name>
				<script>sym.hunter.runner[matches[2]]()</script>
				<command></command>
				<packageName></packageName>
				<regex>^hr (init|start|abort)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>toggle</name>
				<script>local hunting = sym.checkmodule('Hunting')
sym.hunter.system[hunting and 'stop' or 'start']()
sym.echo('Autohunting has been '..(hunting and 'disabled' or 'enabled')..'.')</script>
				<command></command>
				<packageName></packageName>
				<regex>^ht$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>set party size</name>
				<script>sym.hunter.runner.config.party = tonumber(matches[2]) or #gmcp.Room.Players
sym.echo('&lt;0,128,128&gt;Party Size: &lt;128,128,0&gt;' .. sym.hunter.runner.config.party .. '\n')</script>
				<command></command>
				<packageName></packageName>
				<regex>^hps(?: (\d+))?$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>calling</name>
				<script>local cancall = matches[2]
if cancall == 'on' then
  sym.hunter.runner.config.calling = true
  sym.echo('Hunt calling: enabled')
else
  sym.hunter.runner.config.calling = false
  sym.echo('Hunt calling: disabled')
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^hcall (on|off)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>targeting</name>
				<script>send('st '..matches[2])
if sym.hunter.runner.config.calling then
send('crt Target: '..matches[2], false)
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^t(?: (\w+))?$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>interrupt2</name>
				<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
local class = gmcp.Char.Status.class
if class == 'Nanoseer' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('nano eyestrike ' .. target)
elseif class == 'Engineer' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('gadget shock ' .. target)
elseif class == 'B.E.A.S.T.' then
  sym.hunter.send('CLEARQUEUE')
  if tonumber(gmcp.Char.Vitals.pl) &gt; 50 then
    sym.hunter.send('plasma flash ' .. target)
    send('assess ' .. target)
  else
    sym.hunter.send('mwp netlaunch ' .. target)
    send('assess ' .. target)
  end
elseif class == 'Scoundrel' then
  if bullets == 0 then
    sym.hunter.send('CLEARQUEUE')
    sym.hunter.send('guile pocketsand ' .. target)
    send('assess ' .. target)
  else
    sym.hunter.send('CLEARQUEUE')
    sym.hunter.send('gun pointblank ' .. target)
    send('assess ' .. target)
  end
elseif class == 'Fury' then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('kith fever ' .. target)
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^int$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>wilderness list</name>
				<script>-- code curtesy of Morgan
cecho(
  "&lt;dark_orchid&gt;-- &lt;cornflower_blue&gt;Wilderness List &lt;dark_orchid&gt;------------------------------------------------------"
)
cecho(
  "\nThis is a list of all wilderness locations, along with if they are in factional or neutral space. Please note, Deisk and Suiko must be flown to."
)
cecho("\n")
cecho("\n&lt;medium_orchid&gt;Song")
cecho("\n")
cecho("\nTabby Outpost                    - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;260&lt;/u&gt;)",
  function()
    send("path track 260")
  end,
  "Path track to v260.",
  true
)
cecho("\nThe Greenwilds                   - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4278&lt;/u&gt;)",
  function()
    send("path track 4278")
  end,
  "Path track to v4278.",
  true
)
cecho("\nArrizuri Quarry                  - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4944&lt;/u&gt;)",
  function()
    send("path track 4944")
  end,
  "Path track to v4944.",
  true
)
cecho("\nThe Anemoi Desert, on Delphi     - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;1519&lt;/u&gt;)",
  function()
    send("path track 1519")
  end,
  "Path track to v1519.",
  true
)
cecho("\n")
cecho("\n&lt;saddle_brown&gt;Scatterhome")
cecho("\n")
cecho("\nIshbi, a Scatterhome asteroid    - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;1128&lt;/u&gt;)",
  function()
    send("path track 1128")
  end,
  "Path track to v1128.",
  true
)
cecho("\nThe Locorin Swamp                - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;6516&lt;/u&gt;)",
  function()
    send("path track 6516")
  end,
  "Path track to v6516.",
  true
)
cecho("\nGolpur Desert                    - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;2147&lt;/u&gt;)",
  function()
    send("path track 2147")
  end,
  "Path track to v2147.",
  true
)
cecho("\n")
cecho("\n&lt;medium_blue&gt;Celestine")
cecho("\n")
cecho("\nThe Siva River on Benu Wen       - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;2749&lt;/u&gt;)",
  function()
    send("path track 2749")
  end,
  "Path track to v2749.",
  true
)
cecho("\nThe Saksar Jungle on Hororeon    - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;3150&lt;/u&gt;)",
  function()
    send("path track 3150")
  end,
  "Path track to v3150.",
  true
)
cecho("\nJelle, a disaster area on Jerzah - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4686&lt;/u&gt;)",
  function()
    send("path track 4686")
  end,
  "Path track to v4686.",
  true
)
cecho("\nThe Fields of Oranc              - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;452&lt;/u&gt;)",
  function()
    send("path track 452")
  end,
  "Path track to v452.",
  true
)
cecho("\n")
cecho("\n&lt;green&gt;Neutral")
cecho("\n")
cecho("\nIxsei Desert                     - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;8781&lt;/u&gt;)",
  function()
    send("path track 8781")
  end,
  "Path track to v8781.",
  true
)
cecho("\nThe Coriolis Mountains           - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;5304&lt;/u&gt;)",
  function()
    send("path track 5304")
  end,
  "Path track to v5304.",
  true
)
cecho("\nThe Tosmar Hunting Preserve      - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;3026&lt;/u&gt;)",
  function()
    send("path track 3026")
  end,
  "Path track to v3026.",
  true
)
cecho("\nPrugita Breeding Colony          - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4677&lt;/u&gt;)",
  function()
    send("path track 4677")
  end,
  "Path track to v4677.",
  true
)
cecho("\nThe Fogbound Marshes             - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;6302&lt;/u&gt;)",
  function()
    send("path track 6302")
  end,
  "Path track to v6302.",
  true
)
cecho("\nFolly Fault Path                 - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;79&lt;/u&gt;)",
  function()
    send("path track 79")
  end,
  "Path track to v79.",
  true
)
cecho("\nNorthern Wilds of Usum Usutti    - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4479&lt;/u&gt;)",
  function()
    send("path track 4479")
  end,
  "Path track to v4479.",
  true
)
cecho("\nThait, a colony on Prosabel II   - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;8945&lt;/u&gt;)",
  function()
    send("path track 8945")
  end,
  "Path track to v8945.",
  true
)
cecho("\nSuiko, Pi Station, Fly Only      - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4302&lt;/u&gt;)",
  function()
    send("path track 4302")
  end,
  "Path track to v4302.",
  true
)
cecho("\nDeisk, Lekknis Station, Fly Only - ")
cechoLink(
  "&lt;white&gt; (v&lt;u&gt;4302&lt;/u&gt;)",
  function()
    send("path track 4302")
  end,
  "Path track to v4565.",
  true
)
cecho("\n&lt;dark_orchid&gt;-------------------------------------------------------------------------")</script>
				<command></command>
				<packageName></packageName>
				<regex>^wildernesslist$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>ships</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>launch ship</name>
				<script>sym.space.boarded = true
sendAll("ship launch", 'ship module activate all', 'ship weapons')
expandAlias("shipart")
enableTimer("ships")
sym.ui.mapper.switch('Space')</script>
				<command></command>
				<packageName></packageName>
				<regex>^(say|ship) launch$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>dock ship</name>
				<script>sym.space.boarded = false
sendAll("ship dock")
disableTimer("ships")
sym.ui.adj.right:hide()
sym.ui.adj.left:hide()</script>
				<command></command>
				<packageName></packageName>
				<regex>^ship dock$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>cargoRecovery</name>
				<script>sendAll('cargo recover n', 'cargo recover ne', 'cargo recover nw', 'cargo recover w', 'cargo recover sw', 'cargo recover s', 'cargo recover se', 'cargo recover e')</script>
				<command></command>
				<packageName></packageName>
				<regex>^car$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>ship artifacts</name>
				<script>send("artifact link ship_anonymity here")
send("artifact link ship_beacon_3 here")
send("artifact link ship_improved_scoops here")
send("artifact link ship_message_beacon here")
send("artifact link ship_homewarp here")
send("artifact link ship_free_voidgate here")
send("artifact link ship_cargo_recover here")
send("artifact link ship_hyperscan_1 here")
send("artifact link ship_anonymity here")
send("artifact link ship_enemy_detector here")
send("artifact link stationlink here")
send("artifact link ship_illusion here")
send("artifact link ship_weapon_falloff here")
send("artifact link ship_weapon_range here")
send("artifact link quantum_cargo_nets here")
send('artifact link sector_scanner here')
send("artifact link ship_voidgate_hopper here")
sendAll("artifact link efficient_skip_2 here", "artifact link efficient_skip_3 here")


--do this smarter someday</script>
				<command></command>
				<packageName></packageName>
				<regex>^shipart</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>autofire all</name>
				<script>sendAll(
  'ship target ' .. target,
  'ship weapon autofire mcannons ' .. target,
  'ship weapon autofire cannons ' .. target,
  'ship weapon autofire lasers ' .. target,
  'ship weapon autofire missiles ' .. target,
  'ship weapon autofire slicer ' .. target,
  'ship weapon autofire drainer ' .. target,
  'ship weapon autofire interdict ' .. target
)</script>
				<command></command>
				<packageName></packageName>
				<regex>^shipaf$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>manual web</name>
				<script>send('ship weapon fire webs '..sym.target)</script>
				<command></command>
				<packageName></packageName>
				<regex>^web$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>rl kinetic</name>
				<script>sendAll(
  'ship weapon ammo mcannons kinetic',
  'ship weapon ammo cannons kinetic',
  'ship weapon ammo missiles kinetic',
  'ship weapons',
  'say reloading Kinetic'
)</script>
				<command></command>
				<packageName></packageName>
				<regex>^rlk$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>rl thermal</name>
				<script>  sendAll('ship weapon ammo mcannons thermal',
          'ship weapon ammo cannons thermal',
          'ship weapon ammo missiles thermal',
          'ship weapons',
          'say reloading Thermal')</script>
				<command></command>
				<packageName></packageName>
				<regex>^rlt$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>rl em</name>
				<script>  sendAll('ship weapon ammo mcannons em',
          'ship weapon ammo cannons em',
          'ship weapon ammo missiles em',
          'ship weapons',
          'say reloading EM')</script>
				<command></command>
				<packageName></packageName>
				<regex>^rle$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>rl gravitic</name>
				<script>  sendAll('ship weapon ammo mcannons gravitic',
          'ship weapon ammo cannons gravitic',
          'ship weapon ammo missiles gravitic',
          'ship weapons',
          'say reloading Gravtic')</script>
				<command></command>
				<packageName></packageName>
				<regex>^rlg$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>ship eva</name>
				<script>sym.space.boarded = false
sendAll("ship eva")
disableTimer("ships")
sym.ui.adj.right:hide()
sym.ui.adj.left:hide()
sym.ui.mapper.switch('Space')</script>
				<command></command>
				<packageName></packageName>
				<regex>^(ship|station) eva$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>leave ship</name>
				<script>sym.ui.mapper.switch('Ground')
sym.space.boarded = false
send('ship disembark')</script>
				<command></command>
				<packageName></packageName>
				<regex>^ship disembark</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>pvp</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="no" isFolder="yes">
				<name>a-b.e.a.s.t.</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>beast muscular hinder</name>
					<script>local target = sym.target
  if not sym.hunter.flags.channeling then
  if not sym.hunter.flags.support and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 70 then
    sym.hunter.send('suit support')
  elseif canmend then
    checkSystems()
  elseif not sym.hunter.flags.dualshot and not sym.hunter.flags.rails then
    sym.hunter.send('mwp dualshot '..target..' hobble hobble')
    send('assess '..target)
  elseif not sym.hunter.flags.routine and sym.hunter.flags.overclock and not sym.hunter.flags.hooknet then
    if tonumber(gmcp.Char.Vitals.bal) == 1 then
      sym.hunter.send('suit routine ' .. target .. ' pound pound pound')
      sym.hunter.send('suit overclock')
      sym.hunter.send('mwp hooknet ' .. target)
      sym.hunter.send('suit pound ' .. target)    
      send('assess ' .. target)
    end
  elseif enemyEntangled then
    sym.hunter.send('suit pound '.. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.hooknet then
    sym.hunter.send('mwp hooknet '.. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.netlaunch then
    sym.hunter.send('mwp netlaunch ' .. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.routine then
    sym.hunter.send('suit routine ' .. target .. ' armvice legclamp boot')
    send('assess ' .. target)
  elseif sym.hunter.flags.dualshot and not sym.hunter.flags.combust then
    sym.hunter.send('plasma combust '..target)
    send('assess '..target)
  elseif not sym.hunter.flags.rails then
    sym.hunter.send('hobble')
    send('assess ' ..target)
  else
    sym.hunter.send('mwp tear ' ..target)
    send('assess ' .. target)
    end
  else
  sym.hunter.send('plasma flash '..target)
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^hinder</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>beast muscular delay</name>
					<script>local target = sym.target
if not sym.hunter.flags.channeling then
  if not sym.hunter.flags.support and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('suit support')
  elseif canmend then
    checkSystems()
  elseif not sym.hunter.flags.airshot then
    sym.hunter.send('mwp airshot ' .. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.dualshot and not sym.hunter.flags.rails then
    sym.hunter.send('mwp dualshot ' .. target ..' hobble hobble')
    send('assess ' .. target)
  elseif not sym.hunter.flags.routine then
    sym.hunter.send('suit routine ' .. target .. ' armvice armvice legclamp')
    send('assess ' .. target)
  elseif not sym.hunter.flags.rails then
    sym.hunter.send('mwp hobble ' .. target)
    send('assess ' .. target)
  else
    sym.hunter.send('suit armvice ' .. target)
    send('assess ' .. target)
  end
else
  sym.hunter.send('plasma sear ' .. target)
end </script>
					<command></command>
					<packageName></packageName>
					<regex>^arms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>musc sunder rush</name>
					<script>local target = sym.target
if not sym.hunter.flags.channeling then
  if mmp.defs.current["Sharpened wristblade"] then
    send('mwp serrate')
  elseif not mmp.defs.current["Serrated wristblade"] then
    send('mwp serrate')
  end
  if not sym.hunter.flags.support and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('suit support')
    send('assess ' .. target)
  elseif canmend then
    checkSystems()
  elseif entangled then
    send('plasma disentangle jaidyn')
  elseif not sym.hunter.flags.dualshot then
    sym.hunter.send('mwp dualshot ' .. target)
    send('assess ' .. target)
  elseif sym.hunter.flags.dualshot and not sym.hunter.flags.combust then
    sym.hunter.send('plasma combust '..target)
    send('assess '..target)
  elseif not sym.hunter.flags.routine and sym.hunter.flags.overclock then
    if tonumber(gmcp.Char.Vitals.bal) == 1 then
      sym.hunter.send('suit routine ' .. target .. ' pound pound pound')
      sym.hunter.send('suit overclock')
      sym.hunter.send('mwp hooknet ' .. target)
      sym.hunter.send('suit pound ' .. target)    
      send('assess ' .. target)
    end
  elseif enemyEntangled then
    sym.hunter.send('suit pound '.. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.discharge then
    sym.hunter.send('suit discharge ' .. target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.routine then
    sym.hunter.send('suit routine ' .. target .. ' armvice legclamp legclamp')
    send('assess ' .. target)
  else
    sym.hunter.send('mwp twist ' .. target)
    send('assess ' .. target)
  end
else
  sym.hunter.send('plasma sear ' .. target)
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^88$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>suit examine</name>
					<script>send('suit examine '..sym.target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^hud$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>attack</name>
					<script>  local target = sym.target
  if sym.hunter.flags.channeling then
      if tonumber(gmcp.Char.Vitals.pl) &lt; 100 then
        sym.hunter.send('mwp netlaunch ' .. target)
      else
        sym.hunter.send('plasma flash ' .. target)
      end
  else
  if not sym.hunter.flags.contingency then
    sym.hunter.send('contingency')
  end
  if mmp.defs.current["Serrated wristblade"] then
    send('mwp sharpen')
  elseif not mmp.defs.current["Sharpened wristblade"] then
    send('mwp sharpen')
  end
  if not sym.hunter.flags.support and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 70 then
    sym.hunter.send('suit support')
  elseif canmend then
    checkSystems()
  elseif not sym.hunter.flags.routine then
    sym.hunter.send('suit routine ' .. target .. ' boot boot boot')
    send('assess ' .. target)
  elseif not sym.hunter.flags.dualshot and not sym.hunter.flags.rails then
    if tonumber(gmcp.Char.Vitals.bal) == 1 then
      sym.hunter.send('mwp dualshot '..target..' headshot headshot')
        if sym.pvp.flags.blazingstacks &gt; 5 and sym.pvp.flags.burns &lt; 3 and sym.hunter.flags.overclock then
          sym.hunter.send('suit overclock')
          sym.hunter.send('plasma conflagrate '..target)
        end
    end
  elseif not sym.hunter.flags.rails then
    sym.hunter.send('mwp headshot ' ..target)
    send('assess ' .. target)
  elseif not sym.hunter.flags.doused then
    sym.hunter.send('plasma douse '..target)
    send('assess ' .. target)
  elseif sym.pvp.flags.blazingstacks &gt; 5 and sym.pvp.flags.burns &lt; 3 then
    sym.hunter.send('plasma conflagrate '..target)
    send('assess ' .. target)
  elseif sym.pvp.flags.burns == 3 and tonumber(gmcp.Char.Vitals.pl) &gt; 301 then
    sym.hunter.send('plasma incinerate '..target)
    send('assess ' .. target)
  else
    sym.hunter.send('tear '..target)
    send('assess ' .. target)
    end
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^kill$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cook 'em</name>
					<script>local target = sym.target
  if sym.hunter.flags.channeling then
      if tonumber(gmcp.Char.Vitals.pl) &lt; 75 then
        sym.hunter.send('mwp netlaunch ' .. target)
      else
        sym.hunter.send('plasma flash ' .. target)
      end
  else
  if not sym.hunter.flags.contingency then
    sym.hunter.send('contingency')
  end
  if not sym.hunter.flags.support and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 50 then
    sym.hunter.send('suit support')
  elseif entangled then
    send('plasma disentangle jaidyn')
  elseif tonumber(gmcp.Char.Vitals.pl) &lt; 301 then
    sym.hunter.send('plasma consumption')
  elseif sym.pvp.flags.blazingstacks &gt; 5 and sym.pvp.flags.burns &lt; 3 then
    sym.hunter.send('plasma conflagrate '..target)
  elseif not sym.hunter.flags.doused then
    sym.hunter.send('plasma douse '..target)
  elseif sym.pvp.flags.burns == 3 and tonumber(gmcp.Char.Vitals.pl) &gt; 301 then
    sym.hunter.send('plasma incinerate '..target)
  else
    sym.hunter.send('plasma burn '..target)
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fire$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>a-scoundrel</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>mind</name>
					<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
if
  not sym.hunter.flags.stimmed and
  sym.haveskill('Stim', 'Guile') and
  ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 78 and
  not sym.hunter.flags.channeling
then
  sym.hunter.send('guile stim')
  elseif canmend then
    checkSystems()
elseif bullets == 0 then
  if sym.haveskill('Fling', 'Improvisation') then
    if not sym.pvp.flags.meltered and allProps[1] ~= nil and not sym.pvp.flags.stickybomb then
      send("switch impairing random")
      sym.hunter.send('ied stick melter to ' ..allProps[1])
    elseif not sym.pvp.flags.meltered then
      send("switch impairing random")
      sym.hunter.send('ied fling melter at ' .. target)
    elseif not sym.pvp.flags.sleep and not sym.hunter.flags.prone and not sym.pvp.flags.bind then
      send("switch impairing random")
    sym.hunter.send('fling sleeper')

    else
      send("switch impairing random")
      sym.hunter.send('ied fling wiring distorter at ' .. target)
    end

  else
    sym.hunter.send('gun spin')
  end

elseif not sym.pvp.flags.facesmashed and sym.pvp.flags.stickybomb then
   send('guile facesmash ' ..target..' '..allProps[1])
   sym.hunter.send('assess ' .. target)
   if caneject == false then send("gun eject") end
   
elseif sym.pvp.flags.prone and not sym.pvp.flags.bind then
   sym.hunter.send('guile bind')

elseif not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2 then
  sym.hunter.send('gun rapidfire ' .. target)
  sym.hunter.send('assess ' .. target)

elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') then
  send("switch impairing random")
  sym.hunter.send('gun ambush ' .. target)
  sym.hunter.send('assess ' .. target)

else
  sym.hunter.send('gun crackshot ' .. target)
  sym.hunter.send('assess ' .. target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^mind$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>internal</name>
					<script>  local target = sym.target
  local bullets = tonumber(gmcp.Char.Vitals.bl)
if sym.hunter.flags.channeling and bullets &gt; 0 then
      sym.hunter.send('gun pointblank '..target)
      send('info here')
elseif sym.hunter.flags.channeling and bullets == 0 then
      sym.hunter.send('guile pocketsand '..target)
      send('info here')
else
  if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('guile stim')

  elseif canmend then
    checkSystems()

  elseif bullets == 0 then
    if sym.haveskill ('Fling', 'Improvisation') then
      send("switch weakening random")
      sym.hunter.send('ied fling shrapnel piercer at '..target)
      send('assess ' .. target)
    elseif sym.haveskill ('Pocketsand', 'Guile') then
      sym.hunter.send('guile pocketsand '..target)
      send('assess ' .. target)
    elseif sym.haveskill ('Spin', 'Gunslinging') then
      sym.hunter.send('gun spin '..target)
    else
      sym.hunter.send('gun quickload')
    end

  elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') then
    sym.hunter.send('gun ambush '..target)
    send('assess ' .. target)
    if not caneject then send('gun eject') end

  elseif not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2 then
    sym.hunter.send('gun rapidfire '..target)
    send('assess ' .. target)

  else
    sym.hunter.send('gun crackshot '..target)
    send('assess ' .. target)
   end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^33</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sensory</name>
					<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
if sym.hunter.flags.channeling and bullets &gt; 0 then
      sym.hunter.send('gun pointblank '..target)
      send('info here')
elseif sym.hunter.flags.channeling and bullets == 0 then
      sym.hunter.send('guile pocketsand '..target)
      send('info here')
--healing logic
elseif not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 78 then
  sym.hunter.send('guile stim')

elseif canmend then
    checkSystems()
--reload logic
elseif bullets == 0 then
  if sym.haveskill('Fling', 'Improvisation') then
    if not sym.pvp.flags.meltered then
      send("switch disrupting random")
      sym.hunter.send('ied fling shrapnel melter at ' .. target)
      send('assess ' .. target)
      if caneject == false then send("gun eject") end
    else
      send("switch disrupting random")
      sym.hunter.send('ied fling shrapnel blinder at ' .. target)
      if caneject == false then send("gun eject") end
    end  
  else
    send("switch disrupting random")
    sym.hunter.send('guile pocketsand ' .. target)
  end
--attack progression (1)
elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') then
  sym.hunter.send('gun ambush ' .. target)
  send('assess ' .. target)
--attack progression (2)
elseif
  not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2 then
  sym.hunter.send('gun rapidfire ' .. target)
  send('assess ' .. target)
--attack progression (3)
elseif sym.hunter.flags.rapidfire and bullets &gt;= 1 then
  sym.hunter.send('guile haymaker ' .. target .. ' head')
  sym.hunter.send('assess ' .. target)

else
  sym.hunter.send('gun crackshot ' .. target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sens</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kill (facility)</name>
					<script>  local target = sym.target
  local bullets = tonumber(gmcp.Char.Vitals.bl)
      if sym.hunter.flags.channeling and bullets &gt; 0 then
      sym.hunter.send('gun pointblank '..target)
      send('info here')
      elseif sym.hunter.flags.channeling and bullets == 0 then
      sym.hunter.send('guile pocketsand '..target)
      send('info here')
    else
  if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('guile stim')
  elseif bullets == 0 then
    if sym.haveskill ('Fling', 'Improvisation') then
--      send("switch weakening random")
      sym.hunter.send('ied fling shrapnel melter at '..target)
      if not caneject then send('gun eject') end
    elseif sym.haveskill ('Pocketsand', 'Guile') then
      sym.hunter.send('guile pocketsand '..target)
    elseif sym.haveskill ('Spin', 'Gunslinging') then
      sym.hunter.send('gun spin '..target)
    else
      sym.hunter.send('gun quickload')
    end
  elseif incover and not sym.pvp.flags.trigger then
    send('trigger ripper shrapnel')
  elseif incover and not sym.pvp.flags.multibomb then
    send('multibomb ripper shrapnel')
  elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') then
    sym.hunter.send('gun ambush '..target)
    if caneject then send('gun eject') end
  elseif not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2 then
    sym.hunter.send('gun rapidfire '..target)
  else
    sym.hunter.send('gun crackshot '..target)
--    sym.hunter.send('guile haymaker '..target)
    end
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^kill$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>piercer</name>
					<script>send("trigger shrapnel piercer")
send("multibomb shrapnel piercer")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ppp</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>trip bind</name>
					<script>local bullets = tonumber(gmcp.Char.Vitals.bl)

if bullets &gt; 0 and not sym.pvp.flags.trip then
  send("guile trip")
else
  sym.hunter.send('fling sleeper')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^gg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>haymaker</name>
					<script>send('guile haymaker')
send('assess ' .. target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^aa$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>huntextend</name>
					<script>local target = sym.target
    local bullets = tonumber(gmcp.Char.Vitals.bl)
    if windupcheck == 0 then
      if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 71 then
        sym.hunter.send('guile stim')
      elseif canmend then
        checkSystems()
      elseif bullets == 0 then
        if sym.haveskill('Fling', 'Improvisation') then
          send("switch weakening random")
          sym.hunter.send('ied fling shrapnel ripper at ' .. target)
          sym.hunter.send('assess ' .. target)
          if caneject == true and bullets &gt; 3 then
            send("gun eject")
          end
         end
      elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') then
        sym.hunter.send('gun ambush ' .. target)
        sym.hunter.send('assess ' .. target)
        if caneject == false and bullets &gt; 3 then
          send("gun eject")
        end
      elseif
        not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2
      then
        sym.hunter.send('gun rapidfire ' .. target)
        sym.hunter.send('assess ' .. target)
        if caneject == false and bullets &gt; 3 then
          send("gun eject")
        end
      else
   --     sym.hunter.send('gun crackshot ' .. target)
          sym.hunter.send('guile haymaker ' .. target)
          sym.hunter.send('assess ' .. target)
        if caneject == false and bullets &gt; 3 then
          send("gun eject")
        end
      end
    else
      if bullets == 0 then
        sym.hunter.send('guile pocketsand ' .. target)
        windupcheck = 0
        if caneject == false and bullets &gt; 3 then
          send("gun eject")
        end
      else
        sym.hunter.send('gun pointblank ' .. target)
        windupcheck = 0
      end
    end</script>
					<command></command>
					<packageName></packageName>
					<regex>^he$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>interrupt encroachment</name>
					<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
if bullets == 0 then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('guile pocketsand ' .. target)
else
  sym.hunter.send('CLEARQUEUE')
  send('switch impairing encroachment')
  sym.hunter.send('gun pointblank ' .. target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^ee$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>facesmash</name>
					<script>if sym.ui.roomitems[1].id ~= nil then
send('guile facesmash ' ..sym.target..' ' ..sym.ui.roomitems[1].id)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>damage1</name>
					<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
if windupcheck == 0 then
  if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('guile stim')
  elseif canmend then
    checkSystems()
  elseif bullets == 0 then
    if sym.haveskill('Fling', 'Improvisation') then
      sym.hunter.send('ied fling shrapnel melter at ' .. target)
      if caneject == false and bullets &gt; 3 then
        send("gun eject")
      end
     end
  elseif
    not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2
  then
    sym.hunter.send('gun rapidfire ' .. target)
  else
    sym.hunter.send('gun crackshot ' .. target)
    if caneject == false and bullets &gt; 3 then
      send("gun eject")
    end
  end
else
  if bullets == 0 then
    sym.hunter.send('guile pocketsand ' .. target)
    windupcheck = 0
    if caneject == false and bullets &gt; 3 then
      send("gun eject")
    end
  else
    sym.hunter.send('gun pointblank ' .. target)
    windupcheck = 0
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^ff$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hinder</name>
					<script>local target = sym.target
local bullets = tonumber(gmcp.Char.Vitals.bl)
 if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 and windupcheck == 0 then
    sym.hunter.send('guile stim')
  elseif canmend then
    checkSystems()
  elseif bullets &gt; 0 and not sym.pvp.flags.trip and not sym.hunter.flags.prone and not sym.pvp.flags.bind then
    send("guile trip")
  elseif bullets == 0 and not sym.pvp.flags.sleep and not sym.hunter.flags.prone and not sym.pvp.flags.bind then
    send("switch weakening staggering")
    sym.hunter.send('fling sleeper')
  elseif sym.pvp.flags.prone and not sym.pvp.flags.bind then
    sym.hunter.send('guile bind')
  elseif bullets == 0 then
    send("switch weakening staggering")
    sym.hunter.send('ied fling wiring piercer at '..target)
    
  elseif bullets == 0 and windupcheck == 1 then
      send("switch weakening staggering")
      sym.hunter.send('guile pocketsand '..target)
      sym.hunter.send('assess ' .. target)
      windupcheck = 0
  
  elseif not sym.hunter.flags.ambushed and sym.haveskill('Ambush', 'Gunslinging') and windupcheck == 0 then
    sym.hunter.send('gun ambush '..target)
    sym.hunter.send('assess ' .. target)
  
  elseif not sym.hunter.flags.rapidfire and sym.haveskill('Rapidfire', 'Gunslinging') and bullets &gt;= 2 and windupcheck == 0 then
    sym.hunter.send('gun rapidfire '..target)
    sym.hunter.send('assess ' .. target)
    
  elseif not caneject and bullets &gt; 3 then
    send('gun eject')
  
  elseif bullets &gt;= 1 and windupcheck == 0 then
    sym.hunter.send('gun crackshot '..target)
    sym.hunter.send('assess ' .. target)
  
  else
    sym.hunter.send('gun crackshot '..target)
    windupcheck = 0
 end</script>
					<command></command>
					<packageName></packageName>
					<regex>^hinder$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>evocation</name>
					<script>  local target = sym.target
  local bullets = tonumber(gmcp.Char.Vitals.bl)
      if sym.hunter.flags.channeling and bullets &gt; 0 then
      sym.hunter.send('gun pointblank '..target)
      send('info here')
      elseif sym.hunter.flags.channeling and bullets == 0 then
      sym.hunter.send('guile pocketsand '..target)
      send('info here')
    else
  if not sym.hunter.flags.stimmed and sym.haveskill('Stim', 'Guile') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('guile stim')
  elseif not sym.pvp.flags.trigger then
    send('trigger ripper shrapnel')
  elseif not sym.pvp.flags.multibomb then
    send('multibomb ripper shrapnel')
  elseif bullets == 0 then
    send("switch impairing random")
    sym.hunter.send('guile gritblast')
  else
    sym.hunter.send('gun outgunned')
    end
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^aoe$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>a-engineer</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>heartbreaker route</name>
					<script>local target = sym.target
local sym_name = gmcp.Char.Name.name
if not sym.hunter.flags.channeling then
  if not sym.hunter.flags.stimjected and not sym.hunter.flags.autoheal and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('stimjector ' .. sym_name)
  elseif not sym.hunter.flags.turretpower then
    sym.hunter.send('turret qpcboost')
  elseif tonumber(gmcp.Char.Vitals.pt) &lt; 36 and not sym.hunter.flags.airdrop then
    send('airdrop')
  elseif not sym.pvp.flags.worming and sym.pvp.currentstatic &gt; 0 then
    sym.hunter.send('bot worm ' .. target)
    sym.hunter.send('assess ' .. target)
  elseif not sym.hunter.flags.repeated then
    if sym.pvp.flags.enemysubsystems.internal &gt; 7500 then
      sym.hunter.send('bot repeat disrupt ' .. target)
      sym.hunter.send('assess ' .. target)
    else
      sym.hunter.send('bot repeat claw ' .. target)
      sym.hunter.send('assess ' .. target)
    end
  elseif not sym.hunter.flags.gaussfield then
    sym.hunter.send('operate gaussfield')
    sym.hunter.send('assess ' .. target)
  elseif not sym.hunter.flags.degauss.turret and sym.pvp.currentstatic &gt; 500 then
    sym.hunter.send('operate degauss '..target..' turret')
    sym.hunter.send('assess ' .. target)
  elseif not sym.hunter.flags.gaussify then
    sym.hunter.send('operate gaussify '..target)
    sym.hunter.send('assess ' .. target)
  elseif sym.hunter.flags.repeating then
    sym.hunter.send('gadget shock ' .. target)
    sym.hunter.send('assess ' .. target)
  elseif not sym.hunter.flags.harassed and not sym.hunter.flags.airdrop then
    sym.hunter.send('bot harass '..target)
    sym.hunter.send('assess ' .. target)
  elseif canmend then
    checkSystems()
  else
    sym.hunter.send('bot disrupt ' .. target)
    sym.hunter.send('assess ' .. target)
  end
else
  sym.hunter.send('gadget shock ' .. target)
  sym.hunter.send('assess ' .. target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^heart</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>musc route</name>
					<script>local target = sym.target
local sym_name = gmcp.Char.Name.name
if not sym.hunter.flags.channeling then
  if not sym.hunter.flags.stimjected and not sym.hunter.flags.autoheal and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
    sym.hunter.send('stimjector ' .. sym_name)
  elseif not sym.hunter.flags.turretpower then
    sym.hunter.send('turret qpcboost')
  elseif tonumber(gmcp.Char.Vitals.pt) &lt; 36 and not sym.hunter.flags.airdrop then
    send('airdrop')
  elseif not sym.hunter.flags.harassed and not sym.hunter.flags.airdrop then
    sym.hunter.send('bot harass '..target)
    sym.hunter.send('assess ' .. target)
  elseif canmend then
    checkSystems()
  elseif sym.pvp.currentshards &gt; 5 then
    sym.hunter.send('operate magnetize ' .. target)
    sym.hunter.send('assess ' .. target)
  elseif not sym.hunter.flags.spike then
    sym.hunter.send('bot spike ' .. target)
    sym.hunter.send('assess ' .. target)
  else
    sym.hunter.send('operate junkjet ' .. target)
    sym.hunter.send('assess ' .. target)
  end
else
  sym.hunter.send('gadget shock ' .. target)
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^junk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Highlight QPC</name>
					<script>-- code curtesy of Thorne
local roomID = getPlayerRoom()
if matches[2] then
  unHighlightRoom(roomID)
else
  highlightRoom(roomID, 0, 255, 0, 0, 0, 255, 1, 255, 255)
end
local nearbyRooms = {}
nearbyRooms[1] = {}
nearbyRooms[2] = {}
nearbyRooms[3] = {}
for exit, room in pairs(getRoomExits(roomID)) do
  nearbyRooms[1][room] = true
end
for roomID, _ in pairs(nearbyRooms[1]) do
  for exit, room in pairs(getRoomExits(roomID)) do
    nearbyRooms[2][room] = true
  end
end
for roomID, _ in pairs(nearbyRooms[2]) do
  for exit, room in pairs(getRoomExits(roomID)) do
    nearbyRooms[3][room] = true
  end
end
local roomsInRadius = {}
for _, roomlist in ipairs(nearbyRooms) do
  for roomID, _ in pairs(roomlist) do
    roomsInRadius[roomID] = true
  end
end
display(roomsInRadius)
for roomID, _ in pairs(roomsInRadius) do
  if matches[2] then
    unHighlightRoom(roomID)
  else
    highlightRoom(roomID, 100, 100, 0, 100, 0, 150, 1, 255, 255)
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^hlqpc(o)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^kill</name>
					<script>  local target = sym.target
  local sym_name = gmcp.Char.Name.name
  if sym.hunter.flags.channeling then
      sym.hunter.send('gadget shock '..target)
      send('info here')
  else
    if not sym.hunter.flags.stimjected and not sym.hunter.flags.autoheal and sym.haveskill('Stimjector', 'Gadgets') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
      sym.hunter.send('stimjector ' .. sym_name)
    elseif not sym.hunter.flags.turretpower then
      sym.hunter.send('turret qpcboost')
    elseif tonumber(gmcp.Char.Vitals.pt) &lt; 36 and not sym.hunter.flags.airdrop and sym.haveskill('Airdrop', 'Bots')then
      send('airdrop')
-- remove the commented out code below for lower level bashing
--  elseif not sym.hunter.flags.repeated and sym.haveskill('Repeat', 'Bots') and tonumber(string.match(gmcp.IRE.Target.Info.hpperc, '%d+')) &gt; 75 then
--    sym.hunter.send('bot repeat claw '..target)
--  elseif not sym.hunter.flags.harassed and sym.haveskill('Harass', 'Bots') then
--    sym.hunter.send('bot harass '..target)
--  elseif sym.hunter.flags.repeating and sym.haveskill('Shock', 'Gadgets') then
--    sym.hunter.send('gadget shock '..target)
    else
      sym.hunter.send('bot disrupt '..target)
    end
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^kill</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>turret focus</name>
					<script>send('turret focus ' .. sym.target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^focus</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>testing degauss</name>
					<script>sym.hunter.send('operate degauss '..sym.target..' turret')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dega$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>a-nanoseer</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>frenzy</name>
					<script>if tonumber(gmcp.Char.Vitals.sa) &gt;= 350 and not sym.hunter.flags.frenzy and not sym.hunter.flags.frenzyCD then
  send('oblivion frenzy')
 end</script>
					<command></command>
					<packageName></packageName>
					<regex>^frenzy$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mind route</name>
					<script>local target = sym.target
if not sym.hunter.flags.embraced and
  ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 80 and not sym.hunter.flags.channeling then
  sym.hunter.send('void embrace')
elseif canmend then
  checkSystems()
elseif not sym.pvp.flags.enveloped then
  sym.hunter.send('nano envelop '.. target)
elseif tonumber(sym.pvp.flags.mindaff) &gt; 5 then
  sym.hunter.send('void minddrain ' .. target)
    sym.hunter.send('assess')
elseif sym.pvp.flags.rattle then
  sym.hunter.send('nano confound ' .. target)
    sym.hunter.send('assess')
elseif sym.pvp.flags.sluggish then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('void rattle ' .. target)
    sym.hunter.send('assess')
elseif sym.pvp.flags.distracted then
  sym.hunter.send('CLEARQUEUE')
  sym.hunter.send('nano sluggish ' .. target)
    sym.hunter.send('assess')
elseif tonumber(sym.pvp.flags.mindaff) &gt; 3 then
  sym.hunter.send('nano distract ' .. target)
    sym.hunter.send('assess')
  
elseif not sym.pvp.flags.mindswap then
  sym.hunter.send('nano mindswap ' .. target)
  sym.hunter.send('assess')
  
elseif sym.pvp.flags.mindswap then
  sym.hunter.send('nano confound ' .. target)
  sym.hunter.send('assess')
  
else
  sym.hunter.send('eyestrike')
  end
  </script>
					<command></command>
					<packageName></packageName>
					<regex>^mind$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nano defences</name>
					<script>if not sym.hunter.flags.architect and not sym.hunter.flags.conqueror then
  sym.hunter.send('oblivion channel architect')
  sym.hunter.flags.architect = true
   elseif sym.hunter.flags.architect and not sym.hunter.flags.miniaturization then
   sym.hunter.send('nano miniaturization')
   elseif sym.hunter.flags.architect and sym.hunter.flags.miniaturization and not sym.hunter.flags.protect then
   sym.hunter.send('nano protect')
   elseif sym.hunter.flags.architect and sym.hunter.flags.miniaturization and sym.hunter.flags.protect and not sym.hunter.flags.rush then
   sym.hunter.send('nano rush')
   elseif sym.hunter.flags.architect and sym.hunter.flags.miniaturization and sym.hunter.flags.protect and sym.hunter.flags.rush and not sym.hunter.flags.alertness then
   sym.hunter.send('nano alertness')
   elseif sym.hunter.flags.architect and sym.hunter.flags.miniaturization and sym.hunter.flags.protect and sym.hunter.flags.rush and sym.hunter.flags.alertness then
   sym.hunter.send('oblivion swap traveller')
   sym.hunter.flags.architect = false
   sym.hunter.send('oblivion affinity conqueror')
   elseif not sym.hunter.flags.architect and sym.hunter.flags.miniaturization and sym.hunter.flags.protect and sym.hunter.flags.rush and sym.hunter.flags.alertness and sym.hunter.flags.conqueror and not sym.hunter.flags.progenitor then
   sym.hunter.send('oblivion affinity progenitor')
   else
   sym.hunter.send('oblivion negation')
   echo('DEFUP COMPLETE - DONT FORGET PROGENITOR')
   end</script>
					<command></command>
					<packageName></packageName>
					<regex>^nanodefup</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shatter route</name>
					<script>    local target = sym.target
 if sym.hunter.flags.channeling then
      sym.hunter.send('nano eyestrike')
  elseif not sym.hunter.flags.embraced and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 78 and not sym.hunter.flags.channeling then
    sym.hunter.send('void embrace')
  elseif sym.pvp.flags.freezestacks &gt; (sym.pvp.flags.stacksNeeded + 1) then
    sym.hunter.send('void shatter '..target)
  elseif canmend then
    checkSystems()
  elseif not sym.hunter.flags.speedup then
    sym.hunter.send('oblivion speedup')
  elseif not sym.pvp.flags.enveloped then
    sym.hunter.send('nano envelop '.. target)
  elseif not sym.pvp.flags.roomdrain then
    expandAlias('frenzy')
    sym.hunter.send('void roomdrain')
    sym.hunter.send('assess')
  elseif sym.haveskill('Freeze', 'Voidism') then
    expandAlias('frenzy')
    sym.hunter.send('void freeze '..target)
    sym.hunter.send('assess')
  elseif sym.hunter.flags.frozen then
    expandAlias('frenzy')
    limbdrainchooser()  
  else
    sym.hunter.send('eyestrike')
    send('info here')
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^free$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>defup</name>
					<script>sym.hunter.send('oblivion channel architect')
tempTimer(3, [[sym.hunter.send('nano miniaturization')]])
tempTimer(7, [[sym.hunter.send('nano protect')]])
tempTimer(11, [[sym.hunter.send('nano rush')]])
tempTimer(14.5, [[sym.hunter.send('nano alertness')]])
tempTimer(18, [[sym.hunter.send('oblivion swap progenitor')]])
tempTimer(18, [[sym.hunter.send('oblivion affinity conqueror')]])
tempTimer(21.5, [[sym.hunter.send('oblivion affinity traveller')]])
tempTimer(24, [[sym.hunter.send('oblivion negation')]])</script>
					<command></command>
					<packageName></packageName>
					<regex>^ndef$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mind damage route</name>
					<script>  local target = sym.target
  if not sym.hunter.flags.embraced and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 78 and not sym.hunter.flags.channeling then
    sym.hunter.send('void embrace')
  elseif canmend then
    checkSystems()
  elseif not sym.hunter.flags.speedup and not sym.hunter.flags.speeduproom then
    sym.hunter.send('oblivion speedup')  
  elseif not sym.pvp.flags.affinitied and tonumber(gmcp.Char.Vitals.nn) &gt; 150 then
    expandAlias('frenzy')
    sym.hunter.send('nano affinity '..target)
    sym.hunter.send('assess')
  elseif not sym.pvp.flags.multiswarm then
    expandAlias('frenzy')
    sym.hunter.send('nano multiswarm '.. target)
    sym.hunter.send('assess')
  elseif sym.pvp.flags.affinitied and not sym.hunter.flags.multistrike then
    expandAlias('frenzy')
    sym.hunter.send('nano multistrike '.. target)
    sym.hunter.send('assess')
  elseif sym.pvp.flags.affinitied and sym.hunter.flags.multistrike then
    expandAlias('frenzy')
    sym.hunter.send('nano swarm '.. target)
    sym.hunter.send('assess')
  else
    sym.hunter.send('freeze')
    send('info here')
  end</script>
					<command></command>
					<packageName></packageName>
					<regex>^swarm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>limbdrain</name>
					<script>local target = sym.target
 if sym.hunter.flags.channeling then
      sym.hunter.send('nano eyestrike')
      send('info here')
    elseif not sym.hunter.flags.embraced and sym.haveskill('Embrace', 'Voidism') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
        sym.hunter.send('void embrace')
      elseif not sym.hunter.flags.speedup and not sym.hunter.flags.speeduproom then
        sym.hunter.send('oblivion speedup')  
      elseif sym.pvp.flags.freezestacks &gt; 3 then
        expandAlias('frenzy')
        limbdrainchooser()      
      else
        expandAlias('frenzy')
        sym.hunter.send('void freeze ' .. target)
      end</script>
					<command></command>
					<packageName></packageName>
					<regex>^limbs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nano analyze</name>
					<script>send('nano analyze '..sym.target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^hud$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nanoKill</name>
					<script>local target = sym.target
if sym.hunter.flags.channeling then
  sym.hunter.send('nano eyestrike')
  send('info here')
elseif not sym.hunter.flags.embraced and sym.haveskill('Embrace', 'Voidism') and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75 then
  sym.hunter.send('void embrace')
elseif #sym.ui.roommobs &gt; 1 and not sym.hunter.flags.speedup and not sym.hunter.flags.speeduproom then
  sym.hunter.send('oblivion speedup')    
else
  expandAlias('frenzy')
  sym.hunter.send('void freeze ' .. target)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^kill</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>a-fury</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>bleed1</name>
					<script>  local target = sym.target
local stance = gmcp.Char.Vitals.st:lower()
local rage = tonumber(gmcp.Char.Vitals.rg)
if not sym.hunter.flags.channeling then
  if not sym.hunter.flags.suffused and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 71 then
    sym.hunter.send("suffuse")
  elseif canmend and not sym.hunter.flags.unstoppable then
    checkSystems()
  else if sym.hunter.flags.unstoppable then
      local to_combo =
        {
          ['symmetry'] = 'combo gutrend overwhelm',
          ['flare'] = 'combo wound overwhelm',
          ['eruption'] = 'combo hypertension overwhelm',
        }
      sym.hunter.send(to_combo[stance] .. ' ' .. target)
    else if sym.hunter.flags.unstoppableready then
        local to_combo =
          {
            ['symmetry'] = 'combo gutrend unstoppable',
            ['flare'] = 'combo wound unstoppable',
            ['eruption'] = 'combo hypertension unstoppable',
          }
        sym.hunter.send(to_combo[stance] .. ' ' .. target)
      else if not sym.hunter.flags.berserk and rage &gt;= 5 then
          local to_combo =
            {
              ['symmetry'] = 'combo gutrend berserk',
              ['flare'] = 'combo wound deepstrike',
              ['eruption'] = 'combo hypertension berserk',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        else
          local to_combo =
            {
              ['symmetry'] = 'combo gutrend flyinglash',
              ['flare'] = 'combo wound deepstrike',
              ['eruption'] = 'combo hypertension flyinglash',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        end
      end
    end
  end
else
  sym.hunter.send("fever")
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^bl1</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bleed2damage</name>
					<script>local target = sym.target
local stance = gmcp.Char.Vitals.st:lower()
local rage = tonumber(gmcp.Char.Vitals.rg)
if not sym.hunter.flags.channeling then
  if
    not sym.hunter.flags.suffused and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75
  then
    sym.hunter.send("suffuse")
  elseif sym.hunter.flags.unstoppable == true and sym.hunter.flags.overpower == false then
    local to_combo =
      {
        ['symmetry'] = 'combo gutrend overpower',
        ['flare'] = 'combo wound overpower',
        ['eruption'] = 'combo bloodburn overpower',
      }
    sym.hunter.send(to_combo[stance] .. ' ' .. target)
  else
    if sym.hunter.flags.unstoppable == true then
      local to_combo =
        {
          ['symmetry'] = 'combo gutrend slice',
          ['flare'] = 'combo wound slice',
          ['eruption'] = 'combo bloodsinge slice',
        }
      sym.hunter.send(to_combo[stance] .. ' ' .. target)
    elseif canmend then
      checkSystems()
    else
      if sym.hunter.flags.unstoppableready == true then
        local to_combo =
          {
            ['symmetry'] = 'combo gutrend unstoppable',
            ['flare'] = 'combo wound unstoppable',
            ['eruption'] = 'combo hypertension unstoppable',
          }
        sym.hunter.send(to_combo[stance] .. ' ' .. target)
      else
        if not sym.hunter.flags.berserk and rage &gt; 10 then
          local to_combo =
            {
              ['symmetry'] = 'combo gutrend berserk',
              ['flare'] = 'combo wound deepstrike',
              ['eruption'] = 'combo rupture berserk',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        else
          local to_combo =
            {
              ['symmetry'] = 'combo gutrend flyinglash',
              ['flare'] = 'combo wound deepstrike',
              ['eruption'] = 'combo rupture flyinglash',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        end
      end
    end
  end
else
  sym.hunter.send("fever")
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^bl2</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>musc1</name>
					<script>local target = sym.target
local stance = gmcp.Char.Vitals.st:lower()
local rage = tonumber(gmcp.Char.Vitals.rg)
if not sym.hunter.flags.channeling then
  if
    not sym.hunter.flags.suffused and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75
  then
    sym.hunter.send("suffuse")
  elseif canmend and not sym.hunter.flags.unstoppable then
    checkSystems()
  else
    if sym.hunter.flags.unstoppable then
      local to_combo =
        {
          ['symmetry'] = 'combo swiftcut overwhelm',
          ['ember'] = 'combo assail overwhelm',
          ['blaze'] = 'combo barrage overwhelm',
        }
      sym.hunter.send(to_combo[stance] .. ' ' .. target)
    else
      if sym.hunter.flags.unstoppableready then
        local to_combo =
          {
            ['symmetry'] = 'combo swiftcut unstoppable',
            ['ember'] = 'combo assail unstoppable',
            ['blaze'] = 'combo barrage unstoppable',
          }
        sym.hunter.send(to_combo[stance] .. ' ' .. target)
      else
        if not sym.hunter.flags.resistant and rage &gt; 5 then
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut resistant',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo barrage resistant',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        else
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut upperlash',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo barrage upperlash',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        end
      end
    end
  end
else
  sym.hunter.send("fever")
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>ml1</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>musc2</name>
					<script>local target = sym.target
local stance = gmcp.Char.Vitals.st:lower()
local rage = tonumber(gmcp.Char.Vitals.rg)
if not sym.hunter.flags.channeling then
  if
    not sym.hunter.flags.suffused and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75
  then
    sym.hunter.send("suffuse")
  elseif canmend and not sym.hunter.flags.unstoppable then
    checkSystems()
  else
    if sym.hunter.flags.unstoppable then
      local to_combo =
        {
          ['symmetry'] = 'combo swiftcut twist',
          ['ember'] = 'combo assail twist',
          ['blaze'] = 'combo barrage twist',
        }
      sym.hunter.send(to_combo[stance] .. ' ' .. target)
    else
      if sym.hunter.flags.unstoppableready then
        local to_combo =
          {
            ['symmetry'] = 'combo swiftcut unstoppable',
            ['ember'] = 'combo assail unstoppable',
            ['blaze'] = 'combo barrage unstoppable',
          }
        sym.hunter.send(to_combo[stance] .. ' ' .. target)
      else
        if not sym.hunter.flags.resistant and rage &gt; 5 then
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut resistant',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo barrage resistant',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        else
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut upperlash',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo barrage upperlash',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        end
      end
    end
  end
else
  sym.hunter.send("fever")
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>ml2</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heartrend</name>
					<script>local target = sym.target
local stance = gmcp.Char.Vitals.st:lower()
local rage = tonumber(gmcp.Char.Vitals.rg)
if not sym.hunter.flags.channeling then
  if
    not sym.hunter.flags.suffused and ((gmcp.Char.Vitals.hp / gmcp.Char.Vitals.maxhp) * 100) &lt; 75
  then
    sym.hunter.send("suffuse")
  elseif canmend and not sym.hunter.flags.unstoppable then
    checkSystems()
  else
    if sym.hunter.flags.unstoppable then
      local to_combo =
        {
          ['symmetry'] = 'combo swiftcut overwhelm',
          ['ember'] = 'combo assail overwhelm',
          ['blaze'] = 'combo heartrend overwhelm',
        }
      sym.hunter.send(to_combo[stance] .. ' ' .. target)
    else
      if sym.hunter.flags.unstoppableready then
        local to_combo =
          {
            ['symmetry'] = 'combo swiftcut unstoppable',
            ['ember'] = 'combo assail unstoppable',
            ['blaze'] = 'combo heartrend unstoppable',
          }
        sym.hunter.send(to_combo[stance] .. ' ' .. target)
      else
        if not sym.hunter.flags.resistant and rage &gt; 10 then
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut resistant',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo heartrend resistant',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        else
          local to_combo =
            {
              ['symmetry'] = 'combo swiftcut upperlash',
              ['ember'] = 'combo assail rend',
              ['blaze'] = 'combo heartrend upperlash',
            }
          sym.hunter.send(to_combo[stance] .. ' ' .. target)
        end
      end
    end
  end
else
  sym.hunter.send("fever")
  send('info here')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^hr$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>cover</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>take cover</name>
					<script>if next(coverProps) ~= nil and not incover then
local d20cover = math.random(1, #coverProps)
send('take cover '..coverProps[d20cover])
elseif next(flipProps) ~= nil and not incover then
send('flip ' ..flipProps[1])
elseif incover then
cecho('&lt;yellow&gt;We are tucked in nice and tight in our cover already, friend.')
else
cecho('&lt;yellow&gt;I don\'t think there is cover here, my friend!!!')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^cover$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<Alias isActive="yes" isFolder="no">
			<name>reload ui</name>
			<script>resetProfile()</script>
			<command></command>
			<packageName></packageName>
			<regex>^reloadui$</regex>
		</Alias>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>hacking</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>infect</name>
				<script>if not sym.hacker.overwrite then
  send('overwrite ' .. sym.target)
elseif not sym.hacker.decoy and #sym.ui.roommobs &gt; 2 then
  local foundDecoy = false
  for _, mob in ipairs(sym.ui.roommobs) do
    if mob.attrib == "m" and mob.name == "decoy" then
      foundDecoy = true
      break
    end
  end
  if not foundDecoy then
    send('decoy')
  else
    send('infect ' .. sym.target)
  end
else
  send('infect ' .. sym.target)
end
</script>
				<command></command>
				<packageName></packageName>
				<regex>^infect$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>unlock</name>
				<script>send('unlock ' ..sym.hacker.password)</script>
				<command></command>
				<packageName></packageName>
				<regex>^unlock$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>terminals</name>
				<script>  local output = "Access Terminals:\n"

  for _, terminal in ipairs(sym.accessTerminals) do
    output = output .. "ID: " .. terminal.id .. "\n"
    output = output .. "Room: " .. terminal.room .. "\n"
    output = output .. "Hacking Level: " .. terminal.hackingLevel .. "\n"
    output = output .. "Area: " .. terminal.area .. "\n"
    output = output .. "&lt;orange&gt;--------------------------&lt;white&gt;\n"
  end

cecho(output)</script>
				<command></command>
				<packageName></packageName>
				<regex>^terminals$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>SPT</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Install Tracker</name>
				<script>--Install / reset the tracker.
spt_install()</script>
				<command></command>
				<packageName></packageName>
				<regex>^sptinstall$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Parse QWHO</name>
				<script>if not spt then
	spt_echo("Database not currently enabled. Please use 'sptinstall' before attempting to check qwho; this will prevent errors.")
else
	peopleOnline = {}
	parsingQW = true
	enableTrigger("SPT Qwho")
	send("qwho", false)
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^qwp$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Parse Bounty Hunters</name>
				<script>if not spt then
	spt_echo("Database not currently enabled. Please use 'sptinstall' before attempting to check qwho; this will prevent errors.")
else
	peopleOnline = {}
	parsingQW = true
	enableTrigger("SPT Qwho")
	send("bounty hunters",false)
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^qwb$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Update Highlights</name>
				<script>spt_loadHighlights()
send("qw")</script>
				<command></command>
				<packageName></packageName>
				<regex>^qw$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Configs</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle Highlighting</name>
					<script>if spt.highlightNames then
	--Remove any highlights, and turn off the toggle.
	spt.highlightNames = false
	spt_clearHighlights()
	spt_echo("Disabled name highlighting.")
else
	--Begin highlighting again, and enable them all.
	spt.highlightNames = true
	spt_loadHighlights()
	spt_echo("Enabled name highlighting.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt hl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Colours of Factions</name>
					<script>local factions = {"Celestine", "Scatterhome", "Song"}

local faction, colour = "", ""

if table.contains(factions, matches[2]:title()) then
	faction = matches[2]:title()
	colour = matches[3]
elseif table.contains(factions, matches[3]:title()) then
	faction = matches[3]:title()
	colour = matches[2]
else
	spt_echo("That is not a valid faction, please choose from: &lt;green&gt;Celestine, Scatterhome or Song.")
end

if faction ~= "" then
	if table.contains(color_table, colour) then
		spt_echo(faction.." will now be highlighted in &lt;"..colour.."&gt;"..colour..".")
		spt_updateHighlights(faction, colour)
	else
		spt_echo("That is not a valid colour to choose from.")
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sptc (\w+) (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Show Settings</name>
					<script>local count = 0
for i,v in pairs(spt.players) do
	count = count + 1
end

spt_echo("Starmourn Player Tracking Settings")
echo("\n")
spt_echo((spt.highlightNames and "&lt;green&gt;We are" or "&lt;red&gt;We are not").."&lt;LightSkyBlue&gt; currently highlighting names.")
cecho("\n       &lt;LightSkyBlue&gt;Total of &lt;white&gt;"..count.."&lt;LightSkyBlue&gt; names!\n\n")
spt_echo("Highlight settings:")
cecho("\n &lt;"..spt.highlighting.Celestine.."&gt;Celestine &lt;white&gt;members will be highlighted in &lt;"..spt.highlighting.Celestine.."&gt;"..spt.highlighting.Celestine.."&lt;white&gt;.")
cecho("\n &lt;"..spt.highlighting.Scatterhome.."&gt;Scatterhome &lt;white&gt;members will be highlighted in &lt;"..spt.highlighting.Scatterhome.."&gt;"..spt.highlighting.Scatterhome.."&lt;white&gt;.")
cecho("\n &lt;"..spt.highlighting.Song.."&gt;Song &lt;white&gt;members will be highlighted in &lt;"..spt.highlighting.Song.."&gt;"..spt.highlighting.Song.."&lt;white&gt;.")
cecho("\n &lt;"..spt.highlighting.Rogue.."&gt;Rogues &lt;white&gt; will be highlighted in &lt;"..spt.highlighting.Rogue.."&gt;"..spt.highlighting.Rogue.."&lt;white&gt;.")
cecho("\n &lt;white&gt;Those &lt;"..spt.highlighting.Hidden.."&gt;Hidden &lt;white&gt; will be highlighted in &lt;"..spt.highlighting.Hidden.."&gt;"..spt.highlighting.Hidden.."&lt;white&gt;.")

send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt show$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Actions</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Honours Person</name>
					<script>local ignore = {
  "list", "categories", "stats", "show", "feature", "unfeature", "newbie", "combat", "space flight", 
  "space combat", "exploration", "your character", "main quest", "wealth", "resource gathering",
  "designing", "crafting", "resource production", "hacking", "questing", "orgs", "items", "prestige"
}

if not table.contains(ignore, matches[2]:lower()) then
  honoursPerson = matches[2]:title()
  spt_download(matches[2]:title(),false)
else
  send(matches[1])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^honou?rs? (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Who</name>
					<script>local name = matches[2]:title()
local x, f, c, r
if not spt_exists(name) then
	spt_echo(name.." is not yet tracked!")
else
	x = spt.players[name]
	f = spt.highlighting[x.faction]
  c = spt.highlighting[x.class:gsub("%.", ""):lower():title()]

	cecho("\n&lt;blue&gt;-- &lt;NavajoWhite&gt;"..x.fullname.." &lt;blue&gt;"..string.rep("-", 64 - (string.len(x.fullname) + 3)))
  if x.faction ~= "" then
  	cecho("\n&lt;DimGrey&gt; Faction:   &lt;"..f.."&gt;"..x.faction..string.rep(" ", 31 - string.len(x.faction)).."  &lt;DimGrey&gt; Level:   &lt;white&gt;"..x.level)
  	cecho("\n&lt;DimGrey&gt; Class:     &lt;"..c.."&gt;"..x.class)
  else
  	cecho("\n&lt;DimGrey&gt; Faction:   &lt;white&gt;Admin"..string.rep(" ", 39 - string.len("Administrator")).."  &lt;DimGrey&gt; Level:   &lt;white&gt;Admin")
  	cecho("\n&lt;DimGrey&gt; Class:     &lt;white&gt;Admin")
  end
	cecho("\n&lt;blue&gt;"..string.rep("-", 65))
	cecho("\n ")
	send(" ",false)
end	</script>
					<command></command>
					<packageName></packageName>
					<regex>^whois (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Stats</name>
					<script>local celestine, scatterhome, song, rogue = {}, {}, {}, {}
local beast, engineer, fury, nanoseer, scoundrel = {}, {}, {}, {}, {}
local amaian, decheeran, elgan, human, jin, krona, nathel, nusriza, rynari, shen, tukkav, whoorn = {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
local totalp = 0

for i,v in pairs(spt.players) do
	if v.faction == "Celestine" then
		table.insert(celestine, v.name)
	elseif v.faction == "Scatterhome" then
		table.insert(scatterhome, v.name)
	elseif v.faction == "Song" then
		table.insert(song, v.name)
	else
		table.insert(rogue, v.name)
	end
  if v.class == "B.E.A.S.T." then
    table.insert(beast, v.name)
  elseif v.class == "Engineer" then
    table.insert(engineer, v.name)
  elseif v.class == "Fury" then
    table.insert(fury, v.name)
  elseif v.class == "Nanoseer" then
    table.insert(nanoseer, v.name)
  elseif v.class == "Scoundrel" then
    table.insert(scoundrel, v.name)
  end
  if v.race == "Amaian" then
    table.insert(amaian, v.name)
  elseif v.race == "Decheeran" then
    table.insert(decheeran, v.name)
  elseif v.race == "Elgan" then
    table.insert(elgan, v.name)
  elseif v.race == "Human" then
    table.insert(human, v.name)
  elseif v.race == "Jin" then
    table.insert(jin, v.name)
  elseif v.race == "Krona" then
    table.insert(krona, v.name)
  elseif v.race == "Nath-el" then
    table.insert(nathel, v.name)
  elseif v.race == "Nusriza" then
    table.insert(nusriza, v.name)
  elseif v.race == "Ry'nari" then
    table.insert(rynari, v.name)
  elseif v.race == "Shen" then
    table.insert(shen, v.name)
  elseif v.race == "Tukkav" then
    table.insert(tukkav, v.name)
  elseif v.race == "W'hoorn" then
    table.insert(whoorn, v.name)
  end
	totalp = totalp + 1
end

spt_echo("Racial count of people currently tracked:")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Amaian.."&gt;Amaian&lt;white&gt;]      - "..#amaian.." &lt;"..spt.highlighting.Amaian.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Decheeran.."&gt;Decheeran&lt;white&gt;]   - "..#decheeran.." &lt;"..spt.highlighting.Decheeran.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Elgan.."&gt;Elgan&lt;white&gt;]       - "..#elgan.." &lt;"..spt.highlighting.Elgan.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Human.."&gt;Human&lt;white&gt;]       - "..#human.." &lt;"..spt.highlighting.Human.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Jin.."&gt;Jin&lt;white&gt;]         - "..#jin.." &lt;"..spt.highlighting.Jin.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Krona.."&gt;Krona&lt;white&gt;]       - "..#krona.." &lt;"..spt.highlighting.Krona.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Nathel.."&gt;Nath-el&lt;white&gt;]     - "..#nathel.." &lt;"..spt.highlighting.Nathel.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Nusriza.."&gt;Nusriza&lt;white&gt;]     - "..#nusriza.." &lt;"..spt.highlighting.Nusriza.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Rynari.."&gt;Ry'nari&lt;white&gt;]     - "..#rynari.." &lt;"..spt.highlighting.Rynari.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Shen.."&gt;Shen&lt;white&gt;]        - "..#shen.." &lt;"..spt.highlighting.Shen.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Tukkav.."&gt;Tukkav&lt;white&gt;]      - "..#tukkav.." &lt;"..spt.highlighting.Tukkav.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Whoorn.."&gt;W'hoorn&lt;white&gt;]     - "..#whoorn.." &lt;"..spt.highlighting.Whoorn.."&gt;players tracked\n\n")

spt_echo("Class count of people currently tracked:")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Beast.."&gt;B.E.A.S.T.&lt;white&gt;]  - "..#beast.." &lt;"..spt.highlighting.Beast.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Engineer.."&gt;Engineer&lt;white&gt;]    - "..#engineer.." &lt;"..spt.highlighting.Engineer.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Fury.."&gt;Fury&lt;white&gt;]        - "..#fury.." &lt;"..spt.highlighting.Fury.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Nanoseer.."&gt;Nanoseer&lt;white&gt;]    - "..#nanoseer.." &lt;"..spt.highlighting.Nanoseer.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Scoundrel.."&gt;Scoundrel&lt;white&gt;]   - "..#scoundrel.." &lt;"..spt.highlighting.Scoundrel.."&gt;players tracked\n\n")

spt_echo("Faction member count of people currently tracked:")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Celestine.."&gt;Celestine&lt;white&gt;]   - "..#celestine.." &lt;"..spt.highlighting.Celestine.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Scatterhome.."&gt;Scatterhome&lt;white&gt;] - "..#scatterhome.." &lt;"..spt.highlighting.Scatterhome.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Song.."&gt;Song&lt;white&gt;]        - "..#song.." &lt;"..spt.highlighting.Song.."&gt;players tracked")
cecho("\n&lt;white&gt; [&lt;"..spt.highlighting.Rogue.."&gt;Rogues&lt;white&gt;]      - "..#rogue.." &lt;"..spt.highlighting.Rogue.."&gt;players tracked")
cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt stats$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Race Members</name>
					<script>local names = {}
local race = matches[2]:title()
local totalp, c = 0, ""
if race == "Hidden" then
  c = "red"
else
  if race == "Nath-el" then
    c = spt.highlighting["Nathel"]
  elseif race == "Ry'nari" then
    c = spt.highlighting["Rynari"]
  elseif race == "W'hoorn" then
    c = spt.highlighting["Whoorn"]  
  else
    c = spt.highlighting[race]
  end
end
for i,v in pairs(spt.players) do
	if v.race == race then
		table.insert(names, v.name)
		totalp = totalp + 1
	end
end
table.sort(names)

spt_echo("Showing members of &lt;"..c.."&gt;"..race.." &lt;LightSkyBlue&gt;race.")
cecho("\n&lt;DimGrey&gt;"..table.concat(names, ", "))
cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt race (Amaian|amaian|Decheeran|decheeran|Elgan|elgan|Human|human|Jin|jin|Krona|krona|Nath-el|nath-el|Nusriza|nusriza|Ry'nari|ry'nari|Shen|shen|Tukkav|tukkav|W'hoorn|w'hoorn)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Class Members</name>
					<script>local names = {}
local class = matches[2]:title()
if class == "Beast" then class = "B.E.A.S.T." end
local totalp, c = 0, ""
if class == "Hidden" then
  c = "red"
else 
  c = spt.highlighting[class] 
end
for i,v in pairs(spt.players) do
	if v.class == class then
		table.insert(names, v.name)
		totalp = totalp + 1
	end
end
table.sort(names)

spt_echo("Showing members of &lt;"..class.."&gt;"..class.." &lt;LightSkyBlue&gt;class.")
cecho("\n&lt;DimGrey&gt;"..table.concat(names, ", "))
cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt class (Beast|beast|B.E.A.S.T.|Engineer|engineer|Fury|fury|Nanoseer|nanoseer|Scoundrel|scoundrel)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Faction Members</name>
					<script>if matches[2] == "all" then
  local celestine, scatterhome, song, rogue, hidden = {}, {}, {}, {}, {}
  local totalc, totalsc, totalso, totalr, totalh, c = 0, 0, 0, 0, 0, ""
  local factions = {"Celestine", "Scatterhome", "Song", "Rogue", "Hidden"}
  for _, faction in pairs(factions) do
    for i,v in pairs(spt.players) do
      if v.faction == faction then
        if faction == "Celestine" then
          table.insert(celestine, v.name)
          totalc = totalc + 1
        elseif faction == "Scatterhome" then
          table.insert(scatterhome, v.name)
          totalsc = totalsc + 1
        elseif faction == "Song" then
          table.insert(song, v.name)
          totalso = totalso + 1
        elseif faction == "Rogue" then
          table.insert(rogue, v.name)
          totalr = totalr + 1
        elseif faction == "Hidden" then
          table.insert(hidden, v.name)
          totalh = totalh + 1
        end
      end
    end
    --table.sort(faction)
  end
  for _, faction in pairs(factions) do
    c = spt.highlighting[faction]
    if faction == "Celestine" then
      table.sort(celestine)
      spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
      cecho("\n&lt;"..c.."&gt;"..table.concat(celestine, ", "))
      cecho("\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalc.."\n\n")
    elseif faction == "Scatterhome" then
      table.sort(scatterhome)
      spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
      cecho("\n&lt;"..c.."&gt;"..table.concat(scatterhome, ", "))
      cecho("\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalsc.."\n\n")
    elseif faction == "Song" then
      table.sort(song)
      spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
      cecho("\n&lt;"..c.."&gt;"..table.concat(song, ", "))
      cecho("\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalso.."\n\n")
    elseif faction == "Rogue" then
      table.sort(rogue)
      spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
      cecho("\n&lt;"..c.."&gt;"..table.concat(rogue, ", "))
      cecho("\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalr.."\n\n")
    elseif faction == "Hidden" then
      table.sort(hidden)
      spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
      cecho("\n&lt;"..c.."&gt;"..table.concat(hidden, ", "))
      cecho("\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalh)
    end
  end
  send(" ")
else
  local names = {}
  local faction = matches[2]:title()
  local totalp, c = 0, ""
  c = spt.highlighting[faction] 
  for i,v in pairs(spt.players) do
    if v.faction == faction then
    	table.insert(names, v.name)
    	totalp = totalp + 1
    end
  end
  table.sort(names)
  spt_echo("Showing members of &lt;"..c.."&gt;"..faction.."&lt;LightSkyBlue&gt;.")
  cecho("\n&lt;"..c.."&gt;"..table.concat(names, ", "))
  cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
  send(" ")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt faction (all|celestine|Celestine|Scatterhome|scatterhome|Song|song|Rogue|rogue|Hidden|hidden)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Lawless Members</name>
					<script>local names = {}
local totalp, c = 0, ""
for i,v in pairs(spt.players) do
	if v.lawless == true then
		table.insert(names, v.name)
		totalp = totalp + 1
	end
end
table.sort(names)

spt_echo("Showing members of the lawless.\n")
for k, v in pairs(names) do
  if k == #names then
    cecho("and &lt;"..spt.highlighting[spt.players[v].faction].."&gt;"..v)
  else
    cecho("&lt;"..spt.highlighting[spt.players[v].faction].."&gt;"..v.."&lt;ansi_white&gt;, ")
  end
end
cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt lawless$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Display Bounty Hunters</name>
					<script>local names = {}
local totalp, c = 0, ""
for i,v in pairs(spt.players) do
	if v.bountyHunter == true then
		table.insert(names, v.name)
		totalp = totalp + 1
	end
end
table.sort(names)

spt_echo("Showing bounty hunters.\n")
for k, v in pairs(names) do
  if k == #names then
    cecho("and &lt;"..spt.highlighting[spt.players[v].faction].."&gt;"..v)
  else
    cecho("&lt;"..spt.highlighting[spt.players[v].faction].."&gt;"..v.."&lt;ansi_white&gt;, ")
  end
end
cecho("\n\n&lt;DimGrey&gt;Total: &lt;white&gt;"..totalp)
send(" ")</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt bounty hunters$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Auto Honors Everyone</name>
					<script>--Different from spt redo as it honors the people to distingush lawless/bounty hunter status

spt_echo("Auto honouring everyone currently tracked!\n")
spt_echo("This is going to be spammy!")
spt_honorsTablePopulate()</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt ah$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Remove Unranked/Retired</name>
					<script>local remove = {}

for i,v in pairs(spt.players) do
	if v.retired then
		table.insert(remove, v.name)
		spt.players[v.name] = nil
	end
end
table.sort(remove)

spt_echo("Removed a total of &lt;green&gt;"..#remove.."&lt;LightSkyBlue&gt; unranked people from the database:\n - "..table.concat(remove, ", ")..".")
send(" ")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt remove$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Re-honours</name>
					<script>local count = 0
if matches[2] then
  spt_echo("Updating everyone who's currently online.\n")
  for i,v in pairs(peopleOnline) do
    if not v:match("masked") then
      count = count + 1
      spt_download(v,false)
    end
  end
  spt_echo("Update complete. Total of "..count.." people have been re-checked.\n")
else
  spt_echo("Updating everyone who's currently in the database.\n")
  for i,v in pairs(spt.players) do
  	count = count + 1
  	spt_download(v.name:title(),false)
  end
  spt_echo("Update complete. Total of "..count.." people have been re-checked.\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^spt redo( online)?$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage />
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
